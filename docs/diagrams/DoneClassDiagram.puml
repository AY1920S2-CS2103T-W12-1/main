@startuml
class DoneCommandParser implements Parser {
    /' Methods '/
    + {static} parse(args : String) : DoneCommand
}

interface Parser<T> {
    parse(userInput : String) : DoneCommand
}

abstract class Command {
    {abstract} execute(Model model) : CommandResult
}

class DoneCommand extends Command {
    /' Fields '/
    + {static} COMMAND_WORD : String
    + {static} MESSAGE_USAGE : String
    + {static} MESSAGE_DELIVERED_SUCCESS : String
    + {static} MESSAGE_ORDER_ALREADY_DELIVERED : String
    - targetIndex : Index
    - doneOrderDescriptor : DoneCommand.DoneOrderDescriptor

    /' Methods '/
    + execute(model : Model) : CommandResult
    + equals(Object other) : boolean
    - {static} createEditedOrder(Order orderToDeliver, DoneOrderDescriptor doneOrderDescriptor) : Order
}

DoneCommand -down-* DoneOrderDescriptor

class DoneOrderDescriptor {
    /' Fields '/
    - tid : TransactionId;
    - name : Name;
    - phone : Phone;
    - email : Email;
    - address : Address;
    - timeStamp : TimeStamp;
    - warehouse : Warehouse;
    - cod : CashOnDelivery;
    - comment : Comment;
    - itemType : TypeOfItem;
    - deliveryStatus : boolean;

    /' Methods '/
    + setTid(TransactionId tid) : void
    + getTid() : Optional<TransactionId>
    + setName(Name name) : void
    + getName() : Optional<Name>
    + setPhone(Phone phone) : void
    + getPhone() : Optional<Phone>
    + setEmail(Email email) : void
    + getEmail() : Optional<Email>
    + setAddress(Address address) : void
    + getAddress() : Optional<Address>
    + setTimeStamp(TimeStamp timeStamp) : void
    + getTimeStamp() : Optional<TimeStamp>
    + setWarehouse(Warehouse warehouse) : void
    + getWarehouse() : Optional<WareHouse>
    + setCash(CashOnDelivery cod) : void
    + getCash() : Optional<CashOnDelivery>
    + setComment(Comment comment) : void
    + getComment() : Optional<Comment>
    + setItemType(TypeOfItem itemType) : void
    + getItemType() : Optional<TypeOfItem>
    + getDeliveryStatus() : boolean
    + setDeliveryStatus(boolean deliveryStatus) : void
    + equals(Object other) : boolean
}
@enduml
