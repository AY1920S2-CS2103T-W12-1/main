@startuml
/' Sequence Diagram for postal sector search '/
!include style.puml
box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":DelinoParser" as DelinoParser LOGIC_COLOR
participant ":ClearCommandParser" as ClearCommandParser LOGIC_COLOR
participant "clearCommand:ClearCommand" as ClearCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("clear -f")
activate LogicManager

LogicManager -> DelinoParser : parseCommand("clear -f")
activate DelinoParser

create ClearCommandParser
DelinoParser -> ClearCommandParser ++

ClearCommandParser --> DelinoParser --

DelinoParser -> ClearCommandParser ++ : parse("-f")

alt if invalid flag or both '-r' and '-o' flags  found in arguments
    ClearCommandParser -> ClearCommandParser ++ : retrieveFlags(args)
    ClearCommandParser --> ClearCommandParser -- : ParseException
    ClearCommandParser --> DelinoParser : ParseException
    DelinoParser --> LogicManager : ParseException
    [<-- LogicManager : ParseException
else flags are valid
    ClearCommandParser -> ClearCommandParser ++ : retrieveFlags(args)

    ClearCommandParser --> ClearCommandParser -- : flags

    create ClearCommand
    ClearCommandParser -> ClearCommand ++ : flags

    ClearCommand --> ClearCommandParser -- : clearCommand

    ClearCommandParser --> DelinoParser -- : clearCommand
    'Hidden arrow to position the destroy marker below the end of the activation bar.
    ClearCommandParser -[hidden]-> DelinoParser
    destroy ClearCommandParser

    DelinoParser --> LogicManager -- : clearCommand

    ref over LogicManager,  Model : execute clear command

[<--LogicManager : result
end
deactivate LogicManager
@enduml
