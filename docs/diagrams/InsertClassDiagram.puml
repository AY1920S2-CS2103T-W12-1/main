@startuml
skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

class InsertCommandParser implements Parser {
    /' Methods '/
    + parse(args : String) : InsertCommand
    - arePrefixesPresent(argumentMultimap : ArgumentMultimap, prefixes : Prefix...) : boolean

}

interface Parser<T> <<interface>> {
    parse(userInput : String) : ClearCommand
}

abstract class "{abstract}\nCommand" {
    + {abstract} execute(model : Model) : CommandResult
}

interface Model <<interface>> {
    + addOrder(Order order) : void
    + hasOrder(Order order) : boolean
}

class ArgumentMultimap {
    + getValue(prefix : Prefix) : Optional<String>
}

class Prefix {
    - prefix : String
}

abstract class "{abstract}\nParcel" {
    + getTid() : TransactionId
    + getName() : Name
    + getPhone() : Phone
    + getEmail() : Email
    + getAddress() : Address
    + getTimestamp() : Timestamp
    + getWarehouse() : Warehouse
    + getCash() : CashOnDelivery
    + getComment() : Comment
    + getItemType() : TypeOfItem
    + isDelivered() : boolean
    + setDeliveryStatus(status : boolean) : void
}
class Order {
    /' Fields '/
    - tid : TransactionId
    - name : Name
    - phone : Phone
    - email : Email
    - address : Address
    - timestamp : Timestamp
    - warehouse : Warehouse
    - cod : CashOnDelivery
    - comment : Comment
    - itemType : TypeOfItem
    - deliveryStatus : boolean

    /' Methods '/
    + equals(other : Object) : boolean
    + hashCode() : int
    + toString() : String
    + isSameParcel(otherOrder : Parcel) : boolean
}

class InsertCommand implements Model {
    /' Fields '/
    + {static} COMMAND_WORD : String
    + {static} MESSAGE_USAGE : String
    + {static} MESSAGE_SUCCESS : String
    + {static} MESSAGE_DUPLICATE_ORDER : String
    - toAdd : Order

    /' Methods '/
    + execute(model : Model) : CommandResult
    + equals(other : Object) : boolean
}

InsertCommand --up|> "{abstract}\nCommand"
InsertCommandParser ..> ArgumentMultimap
InsertCommandParser ..> Prefix
InsertCommand --> Order
Order --right|> "{abstract}\nParcel"
@enduml
