@startuml
skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

"{abstract}\nCommand" <|-- SearchCommand
ReturnOrderContainsKeywordsPredicate "1" <-left- SearchCommand : returnPredicate
ReturnOrderContainsKeywordsPredicate -[dashed]-|> Predicate
OrderContainsKeywordsPredicate "1" <-down- SearchCommand : orderPredicate
OrderContainsKeywordsPredicate -[dashed]left-|> Predicate
SearchCommand .right.> Model
SearchCommandParser .down.> SearchCommand

abstract class "{abstract}\nCommand" {
    {abstract} execute(Model model) : CommandResult
}

class SearchCommand {
    'Methods of SearchCommand
    + execute(model : Model) : CommandResult
}

interface Model <<interface>> {
    + updateFilteredOrderList(predicate: Predicate<Order>) : void
    + updateFilteredReturnOrderList(predicate: Predicate<ReturnOrder>) : void
}

class OrderContainsKeywordsPredicate<Order> {
    'Fields of OrderContainsKeywordsPredicate
    - keywords : List<String>
    - argumentMultimap : ArgumentMultimap
    - isGeneralSearch : boolean

    'Methods of OrderContainsKeywordsPredicate
}

class ReturnOrderContainsKeywordsPredicate<Order> {
    'Fields of ReturnOrderContainsKeywordsPredicate
    - keywords : List<String>
    - argumentMultimap : ArgumentMultimap
    - isGeneralSearch : boolean
}

interface Predicate<T> <<interface>> {
    'Interface Methods
    + test(t : T) : boolean
}

class SearchCommandParser {
    + parse(String args) : SearchCommand
}

@enduml
