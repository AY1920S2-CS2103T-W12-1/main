@startuml
skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

class ImportCommandParser implements Parser {
    /' Methods '/
    + parse(args : String) : ImportCommand
}

interface Parser<T> <<interface>> {
    parse(userInput : String) : ImportCommand
}

abstract class "{abstract}\nCommand" {
    + {abstract} execute(model : Model) : CommandResult
}

class ImportCommand {
    /' Fields '/

    - ordersData : List<String>
    - invalidCounter : int
    - processedOrderCounter : int
    - processedReturnOrderCounter : int
    - duplicateCounter : int

    /' Methods '/
    + execute(model : Model) : CommandResult
    - processData(model : Model)
    - {static} printResult() : String
}

class ParserUtil {
    + {static} parseCsvFile(filePath : String) : List<String>
}

class CsvProcessor {
    + {static} retrieveData(filePath : Path) : List<String>
    - {static} processData(fileData : String) : List<String>
    - {static} getCsvData(sentence : String) : List<String>
}

class InsertCommandParser {
    parse(args : String) : InsertCommand
}

class ReturnCommandParser {
    parse(args : String) : ReturnCommand
}

ImportCommand ..> InsertCommandParser
ImportCommand ..> ReturnCommandParser
ImportCommandParser ..down> ParserUtil
ParserUtil ..down> CsvProcessor
ImportCommand ..right> CsvProcessor
ImportCommand --up|> "{abstract}\nCommand"
@enduml
