@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":OrderBookParser" as OrderBookParser LOGIC_COLOR
participant ":DoneCommandParser" as DoneCommandParser LOGIC_COLOR
participant "d:DoneCommand" as DoneCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delivered 1")
activate LogicManager

LogicManager -> OrderBookParser : parseCommand("delivered 1")
activate OrderBookParser

create DoneCommandParser
OrderBookParser -> DoneCommandParser
activate DoneCommandParser

DoneCommandParser --> OrderBookParser
deactivate DoneCommandParser

OrderBookParser -> DoneCommandParser : parse("1")
activate DoneCommandParser

create DoneCommand
DoneCommandParser -> DoneCommand
activate DoneCommand

DoneCommand --> DoneCommandParser : d
deactivate DoneCommand

DoneCommandParser --> OrderBookParser : d
deactivate DoneCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DoneCommandParser -[hidden]-> OrderBookParser
destroy DoneCommandParser

OrderBookParser --> LogicManager : d
deactivate OrderBookParser

LogicManager -> DoneCommand : execute()
activate DoneCommand


DoneCommand -> DoneCommand: isDelivered()
activate DoneCommand
DoneCommand --> DoneCommand: false
opt order was not delivered
deactivate DoneCommand

DoneCommand -> Model : setOrder()
activate Model

Model --> DoneCommand
deactivate Model
DoneCommand -> Model : deliverOrder()
activate Model

Model --> DoneCommand
deactivate Model
end

DoneCommand -> Model : updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS)
activate Model

Model --> DoneCommand
deactivate Model


create CommandResult
DoneCommand -> CommandResult
activate CommandResult

CommandResult --> DoneCommand
deactivate CommandResult

DoneCommand --> LogicManager : result
deactivate DoneCommand

[<--LogicManager
deactivate LogicManager
@enduml
